# This is an example env file
# Copy it to `.env.local` and set your secrets

# =============================================================================
# SOLANA CONFIGURATION (Required)
# =============================================================================

# Your Solana wallet private key in base64 format
# Generate a new keypair with: node -e "const { Keypair } = require('@solana/web3.js'); const keypair = Keypair.generate(); console.log('Private Key (base64):', Buffer.from(keypair.secretKey).toString('base64')); console.log('Public Key:', keypair.publicKey.toString());"
SOLANA_PRIVATE_KEY=

# Solana network to use
# Options: "solana-devnet" (for testing) or "solana" (for mainnet)
SOLANA_NETWORK=solana-devnet

# Solana RPC URL (optional - defaults to public endpoints)
# Devnet: https://api.devnet.solana.com
# Mainnet: https://api.mainnet-beta.solana.com
# Or use a custom RPC provider like Helius, QuickNode, etc.
SOLANA_RPC_URL=

# =============================================================================
# AI CONFIGURATION (Required for Chat Functionality)
# =============================================================================

# IMPORTANT: You need at least ONE of these AI provider credentials for the chat to work!

# Option 1: AI Gateway (Recommended for Vercel deployments)
# Get from: https://vercel.com/ai-gateway
# Or run: vc link && vc env pull
AI_GATEWAY_TOKEN=

# Option 2: Direct model provider credentials (choose one or more)
# OpenAI API Key - Get from: https://platform.openai.com/api-keys
OPENAI_API_KEY=

# Anthropic API Key - Get from: https://console.anthropic.com/
# ANTHROPIC_API_KEY=

# Google AI API Key - Get from: https://aistudio.google.com/app/apikey
# GOOGLE_GENERATIVE_AI_API_KEY=

# =============================================================================
# DEVELOPMENT (Optional)
# =============================================================================

# Next.js URL for development
NEXT_PUBLIC_URL=http://localhost:3000
